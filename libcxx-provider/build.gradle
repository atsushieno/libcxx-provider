plugins {
    alias(libs.plugins.androidLibrary)
    alias(libs.plugins.kotlinAndroid)
    alias(libs.plugins.vanniktech.maven.publish)
    id 'signing'
}

group "dev.atsushieno"

android {
    namespace 'dev.atsushieno.libcxx'
    compileSdk libs.versions.android.compileSdk.get().toInteger()
    this.ext["description"] = 'Utility package to ensure libc++ packaged into your aab/apk'

    defaultConfig {
        minSdk  libs.versions.android.minSdk.get().toInteger()
        targetSdk  libs.versions.android.targetSdk.get().toInteger()
        versionCode 1
        versionName libs.versions.ndk.get()
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    ndkVersion libs.versions.ndk.get()

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version libs.versions.cmake.get()
        }
    }
    buildFeatures {
        prefabPublishing = true
    }
    prefab {
        create("cxx-provider") {
            name = "cxx-provider"
        }
    }
}

dependencies {
}

tasks.register('javadocJar', Jar) {
    archiveClassifier.set('javadoc')
}
tasks.register('sourceJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

var gitProjectName = "libcxx-provider"
var packageName = project.name
var packageDescription = ext["description"].toString()
// my common settings
var packageUrl = "https://github.com/atsushieno/$gitProjectName"
var licenseName = "MIT"
var licenseUrl = "https://github.com/atsushieno/$gitProjectName/blob/main/LICENSE"
var devId = "atsushieno"
var devName = "Atsushi Eno"
var devEmail = "atsushieno@gmail.com"

// Common copy-pasted
mavenPublishing {
    publishToMavenCentral(com.vanniktech.maven.publish.SonatypeHost.CENTRAL_PORTAL)
    if (project.hasProperty("mavenCentralUsername") || System.getenv("ORG_GRADLE_PROJECT_mavenCentralUsername") != null)
        signAllPublications()
    coordinates(group.toString(), project.name, version.toString())
    pom {
        name.set(packageName)
        description.set(packageDescription)
        url.set(packageUrl)
        version = android.defaultConfig.versionName
        scm { url.set(packageUrl) }
        licenses { license { name.set(licenseName); url.set(licenseUrl) } }
        developers { developer { id.set(devId); name.set(devName); email.set(devEmail) } }
    }
}
